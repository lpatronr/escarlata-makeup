{
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "extends": ["next/core-web-vitals"],
  "overrides": [
    {
      "parser": "@typescript-eslint/parser",
      "files": ["**/*.ts", "**/*.tsx"],
      "extends": ["plugin:@typescript-eslint/recommended"],
      "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
      },
      "plugins": ["tailwindcss", "@typescript-eslint"],
      "rules": {
        "arrow-body-style": ["error", "as-needed"],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports"
          }
        ],
        "import/order": [
          "error",
          {
            "groups": ["builtin", "external", "parent", "sibling", "index", "object", "type"],
            "pathGroups": [
              {
                "pattern": "@/**/**",
                "group": "parent",
                "position": "before"
              }
            ],
            "alphabetize": {
              "order": "asc"
            }
          }
        ],
        "react-hooks/exhaustive-deps": "error",
        "no-restricted-imports": [
          "error",
          {
            "patterns": ["../"]
          }
        ],
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": ["arrow-function"],
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/button-has-type": "error",
        "react/no-array-index-key": "error",
        "react/no-deprecated": "error",
        "react/jsx-pascal-case": "error",
        "eqeqeq": "error",
        "no-unneeded-ternary": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/consistent-type-definitions": [1, "type"],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true
          }
        ]
      }
    }
  ]
}
